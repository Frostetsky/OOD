Шаблон: Декоратор (Decorator)
=====================================================================================================
Цель:

Динамическое добавление новых обязанностей объектов.

=====================================================================================================

Для чего используется:

Используется в качестве альтернативы порождению подклассов для расширения функциональности.

=====================================================================================================
Пример использования:

- Динамическое и понятное клиентам добавление обязанностей объектам.
- Реализация обязанностей, которые могут быть сняты с объекта.
- Расширение класса путём порождения подклассов невозможно по каким-либо причинам.

=====================================================================================================